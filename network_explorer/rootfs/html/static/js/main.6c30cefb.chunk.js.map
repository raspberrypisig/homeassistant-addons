{"version":3,"sources":["App.js","index.js"],"names":["App","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","textfield","fontFamily","letterSpacing","lineHeight","share","paddingTop","accordion","submit","marginTop","textAlign","grid","marginBottom","fontWeight","griditem","heading","margin","paddingBottom","nopadding","paddingLeft","displayblock","redcircle","height","width","borderRadius","backgroundColor","greencircle","nodisplay","circle","paddingRight","explore","textDecoration","tablebold","useState","shares","setShares","advancedOptions","setAdvancedOptions","useEffect","fetch","then","response","json","text","console","log","classes","React","expanded","setExpanded","onExplore","e","stopPropagation","onConnect","index","sharename","sharetype","sharepath","method","headers","body","JSON","stringify","newShares","map","item","Container","component","maxWidth","CssBaseline","onSubmit","values","filter","a","length","alert","undefined","networkshare","render","handleSubmit","Grid","container","className","Typography","variant","xs","type","label","name","helperText","required","InputProps","input","color","IconButton","onClick","Collapse","in","value","MenuItem","Button","key","isconnected","Accordion","onChange","panel","event","isExpanded","AccordionSummary","expandIcon","aria-controls","id","alignItems","Box","flexShrink","href","target","AccordionDetails","TableContainer","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","removedShare","nextState","onRemoveData","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c30cefb.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Button, \n         Grid, \n         makeStyles, \n         Typography, \n         MenuItem, \n         Accordion, \n         AccordionDetails, \n         AccordionSummary, \n         Container, \n         CssBaseline, \n         Collapse, \n         IconButton,\n         Box,\n         Table,\n         TableBody,\n         TableCell,\n         TableContainer,\n         TableHead,\n         TableRow,\n         Paper\n        } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Form } from 'react-final-form';\nimport { TextField, Select } from 'mui-rff';\n//import './App.css';\n\n\n\nfunction App() {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around'\n    },\n    textfield:{\n      fontFamily: 'Arial, sans-serif',\n      letterSpacing: '0.5px',\n      lineHeight: '2rem'\n    },\n    share: {\n      paddingTop: '2rem'\n    },\n    accordion: {\n      /*\n      flexBasis: '33.33%',\n      flexShrink: 0\n      */\n    },\n    submit: {\n      marginTop: '32px',\n      textAlign: 'center'\n    },\n    grid: {\n      marginTop: '2rem',\n      marginBottom: '2rem',\n      fontWeight: 200\n    },\n    griditem: {\n\n    },\n    heading: {\n      margin: 'auto',\n      paddingBottom: '2rem'\n    },\n    nopadding: {\n      paddingLeft: 0\n    },\n    displayblock: {\n      display: 'block'\n    },\n    redcircle: {\n      height: '25px',\n      width: '25px',\n      borderRadius: '50%',\n      backgroundColor: 'red',\n      display: 'inherit'\n    },\n    greencircle: {\n      height: '25px',\n      width: '25px',\n      borderRadius: '50%',\n      backgroundColor: 'green',\n      display: 'inherit'\n    },\n    nodisplay: {\n      display: 'none'\n    },\n    circle: {\n      paddingRight: '1rem'\n    },\n    explore: {\n      textDecoration: 'none'\n    },\n    tablebold: {\n      fontWeight: 'bold'\n    }\n  }));\n\n  const [shares, setShares] = useState([])\n  const [advancedOptions, setAdvancedOptions] = useState(false)\n\n  useEffect(() => {\n    fetch('/admin/shares').then(response => response.json()).then(text => {console.log(text); setShares(text);} );\n  }, []);\n\n  const validateForm = (sharename, sharepath) => {\n    const b = shares.filter(a => a.sharename === sharename || a.sharepath === sharepath ? false: true);\n    return b.length === shares.length;\n  };\n\n  function onSubmit(values) {\n    const isValid = validateForm(values[\"sharename\"], values[\"sharepath\"]);\n    if (!isValid) {\n      alert(\"Validation failed: duplicate entry for either share name or network location\")\n      return false;\n    }\n\n    if (values[\"sharetype\"] === undefined) {\n      values[\"sharetype\"] = \"cifs\"\n    }\n    values[\"key\"] = values[\"sharename\"];\n    values[\"isconnected\"] = false;\n\n    const networkshare = {sharename: values[\"sharename\"], sharetype: values[\"sharetype\"], sharepath: values[\"sharepath\"]};\n    console.log(networkshare);\n\n    fetch('/admin/addnetworkshare', {\n      method: \"post\", \n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(networkshare)\n    }).then(response => response.text()).then(text => {\n      if (text === \"0\") {\n        values[\"isconnected\"] = true;\n        setShares([...shares, values]);\n      }\n      else {\n        alert(\"Sorry. Can't connect to share. Double-check network details\");\n      }\n\n    });\n  }\n\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const onChangeData = (key, value, id) => {\n    const nextState = shares.map(a => a.sharename === id ? { ...a, [key]: value } : a);\n    setShares(nextState);\n   };\n\n   const onRemoveData = (id) => {\n    const removedShare = shares.filter(a => a.sharename === id ? true:false);\n    const nextState = shares.filter(a => a.sharename === id ? false:true);\n    setShares(nextState);\n    fetch('/admin/remove/' + removedShare[0]['sharename'], {\n      method: \"post\"\n    }).then(response => response.text()).then(text=>{});\n   };\n\n   const onExplore = (e) => {\n     e.stopPropagation();\n   };\n\n   const onConnect = (index) => (e) => {\n\n    e.stopPropagation();    \n\n    let share = {sharename: shares[index]['sharename'], sharetype: shares[index]['sharetype'], sharepath: shares[index]['sharepath']};\n\n     fetch('/admin/connect', {\n      method: \"post\", \n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(share)       \n     }).then(response => response.text()).then(text => {\n       console.log(\"Mounted: \" + text);\n       if (text === \"0\" ) {\n          share['isconnected'] = true;\n          const newShares = shares.map(item => item['sharename'] === share['sharename']? share: item);\n          console.log(newShares);\n          setShares(newShares);\n       }\n     });\n   };\n\n  return (\n<Container component=\"main\" maxWidth=\"xs\">\n<CssBaseline />\n\n    <Form\n       onSubmit={onSubmit}\n       render={({handleSubmit}) => (\n        <form onSubmit={handleSubmit}>\n              \n          <Grid container className={classes.grid}>\n          <Typography component=\"h1\" variant=\"h5\" className={classes.heading}>Add Network Shares</Typography>\n            <Grid item xs={12}  className={classes.textfield}>\n              <TextField type=\"text\" label=\"Share Name\" name=\"sharename\" helperText=\"eg. Music\" required={true} variant=\"outlined\"\n            margin=\"normal\"           InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} />\n            </Grid>\n            <Grid item xs={12} >\n              <TextField className={classes.textfield}  label=\"Network Location\" name=\"sharepath\" helperText=\"eg. //192.168.1.10/Music\" required={true}             variant=\"outlined\"\n            margin=\"normal\" InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} color=\"primary\" />\n            </Grid>\n\n            <Grid item xs={12}  className={classes.share}>\n\n            </Grid>\n          \n            <Grid item xs={12}>\n            <IconButton className={classes.nopadding} onClick={() => setAdvancedOptions(!advancedOptions)}><ExpandMoreIcon/></IconButton>\n            <span classes={classes.nopadding}>Advanced Options</span>\n              <Collapse in={advancedOptions}>\n              <Select  name=\"sharetype\" label=\"Share Type\" value=\"cifs\" required={true}>\n               <MenuItem value=\"cifs\">Windows Share</MenuItem>\n             </Select>\n              </Collapse>\n            </Grid>                     \n            <Grid item xs={12} className={classes.submit}>\n               <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n\t\t\t\t\t      Submit\n\t\t\t\t\t     </Button>\n            </Grid>\n          </Grid>          \n        </form>    \n       )}\n    >\n\n    </Form>\n\n\n    <Grid container className={classes.grid}>\n      <Typography className={classes.heading} component=\"h1\" variant=\"h5\">Network Shares</Typography>\n     { shares.map((item, index) => (\n       <Grid  key={item.sharename} item xs={12}>\n         <div className={classes.nodisplay}>{item.isconnected}</div>\n    <Accordion key={item.sharename}  expanded={expanded === item.sharename} onChange={handleChange(item.sharename)}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n          alignItems=\"center\"\n        >\n          <Box className={classes.circle}>                    { item.isconnected &&\n          <span className={classes.greencircle}></span>\n          }\n          { !item.isconnected &&\n          <span className={classes.redcircle}></span> \n          } \n          </Box>\n\n        <Box alignItems=\"center\"  width=\"100%\">\n          <Typography>\n          {item.sharename}\n          </Typography>\n        </Box>\n        <Box flexShrink={1}>\n          { item.isconnected &&\n          <a className={classes.explore} href={`/${item.sharename}`} target=\"_blank\"><Button variant=\"contained\" color=\"secondary\" onClick={onExplore}>Explore</Button></a>\n          }\n          { !item.isconnected &&\n          <a className={classes.explore}><Button color=\"primary\" onClick={onConnect(index)}>Connect</Button></a>\n          }       \n        </Box>\n        \n        </AccordionSummary>\n        <AccordionDetails className={classes.displayblock}>\n          <TableContainer component={Paper}>\n            <Table stickyHeader>\n              <TableHead>\n                <TableRow>\n                  <TableCell classes={{root: classes.tablebold}}>Property</TableCell>\n                  <TableCell classes={{root: classes.tablebold}}>Value</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n              <TableRow>\n                <TableCell classes={{root: classes.tablebold}}>Share Name</TableCell>\n                <TableCell>{item.sharename}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell classes={{root: classes.tablebold}}>Share Location</TableCell>\n                <TableCell>{item.sharepath}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell classes={{root: classes.tablebold}}>Share Type</TableCell>\n                <TableCell>{item.sharetype}</TableCell>\n              </TableRow>   \n              </TableBody>                         \n            </Table>\n\n          </TableContainer>\n          <Button display=\"inline-block\" onClick={() => { onRemoveData(item.sharename)}}>Remove</Button>\n        </AccordionDetails>\n      </Accordion>\n      </Grid>\n     ))}\n    </Grid>\n     \n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}