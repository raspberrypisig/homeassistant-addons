{"version":3,"sources":["App.js","index.js"],"names":["App","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","textfield","fontFamily","letterSpacing","lineHeight","fontSize","share","paddingTop","accordion","submit","marginTop","textAlign","grid","marginBottom","fontWeight","griditem","heading","margin","paddingBottom","nopadding","paddingLeft","displayblock","redcircle","height","width","borderRadius","backgroundColor","greencircle","nodisplay","circle","paddingRight","explore","textDecoration","tablebold","helpertext","remove","color","useState","shares","setShares","advancedOptions","setAdvancedOptions","guest","setGuest","useEffect","fetch","then","response","json","text","console","log","guestAccess","label","value","classes","React","expanded","setExpanded","onExplore","e","stopPropagation","onConnect","index","newShares","Container","component","maxWidth","CssBaseline","onSubmit","values","form","sharename","sharepath","filter","a","length","alert","undefined","networkshare","sharetype","username","password","method","headers","body","JSON","stringify","setTimeout","restart","render","handleSubmit","Grid","container","className","Typography","variant","item","xs","type","name","helperText","required","InputProps","input","InputLabelProps","FormHelperTextProps","data","checked","onChange","event","IconButton","onClick","Collapse","in","MenuItem","Button","map","key","isconnected","Accordion","panel","isExpanded","AccordionSummary","expandIcon","aria-controls","id","alignItems","Box","flexShrink","href","target","AccordionDetails","TableContainer","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","removedShare","nextState","onRemoveData","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9567c48.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Button, \n         Grid, \n         makeStyles, \n         Typography, \n         MenuItem, \n         Accordion, \n         AccordionDetails, \n         AccordionSummary, \n         Container, \n         CssBaseline, \n         Collapse, \n         IconButton,\n         Box,\n         Table,\n         TableBody,\n         TableCell,\n         TableContainer,\n         TableHead,\n         TableRow,\n         Paper\n        } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Form } from 'react-final-form';\nimport { TextField, Select, Checkboxes, CheckboxData } from 'mui-rff';\n//import './App.css';\n\n\n\nfunction App() {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around'\n    },\n    textfield:{\n      fontFamily: 'Arial, sans-serif',\n      letterSpacing: '0.5px',\n      lineHeight: '2rem',\n      fontSize: '24px'\n    },\n    share: {\n      paddingTop: '2rem'\n    },\n    accordion: {\n      /*\n      flexBasis: '33.33%',\n      flexShrink: 0\n      */\n    },\n    submit: {\n      marginTop: '32px',\n      textAlign: 'center'\n    },\n    grid: {\n      marginTop: '2rem',\n      marginBottom: '2rem',\n      fontWeight: 200\n    },\n    griditem: {\n\n    },\n    heading: {\n      margin: 'auto',\n      paddingBottom: '2rem'\n    },\n    nopadding: {\n      paddingLeft: 0\n    },\n    displayblock: {\n      display: 'block'\n    },\n    redcircle: {\n      height: '25px',\n      width: '25px',\n      borderRadius: '50%',\n      backgroundColor: 'red',\n      display: 'inherit'\n    },\n    greencircle: {\n      height: '25px',\n      width: '25px',\n      borderRadius: '50%',\n      backgroundColor: 'green',\n      display: 'inherit'\n    },\n    nodisplay: {\n      display: 'none'\n    },\n    circle: {\n      paddingRight: '1rem'\n    },\n    explore: {\n      textDecoration: 'none'\n    },\n    tablebold: {\n      fontWeight: 'bold'\n    },\n    helpertext: {\n      fontSize: '20px'\n    },\n    remove: {\n      color: 'red'\n    }\n  }));\n\n  const [shares, setShares] = useState([])\n  const [advancedOptions, setAdvancedOptions] = useState(false)\n  const [guest, setGuest] = useState(false)\n\n  useEffect(() => {\n    fetch('/admin/shares').then(response => response.json()).then(text => {console.log(text); setShares(text);} );\n  }, []);\n\n  const validateForm = (sharename, sharepath) => {\n    const b = shares.filter(a => a.sharename === sharename || a.sharepath === sharepath ? false: true);\n    return b.length === shares.length;\n  };\n\n  function onSubmit(values, form) {\n    const isValid = validateForm(values[\"sharename\"], values[\"sharepath\"]);\n    if (!isValid) {\n      alert(\"Validation failed: duplicate entry for either share name or network location\")\n      return false;\n    }\n\n\n\n    if (values[\"sharetype\"] === undefined) {\n      values[\"sharetype\"] = \"cifs\"\n    }\n    values[\"key\"] = values[\"sharename\"];\n    values[\"isconnected\"] = false;  \n    values[\"guest\"] = guest;\n\n    const networkshare = {sharename: values[\"sharename\"], sharetype: values[\"sharetype\"], sharepath: values[\"sharepath\"], guest: values[\"guest\"], username: values[\"username\"], password: values[\"password\"]};\n    console.log(networkshare);\n\n    fetch('/admin/addnetworkshare', {\n      method: \"post\", \n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(networkshare)\n    }).then(response => response.text()).then(text => {\n      if (text === \"0\") {\n        values[\"isconnected\"] = true;\n        setShares([...shares, values]);\n        setTimeout(form.restart);\n      }\n      else {\n        alert(\"Sorry. Can't connect to share. Double-check network details\");\n      }\n\n    });\n  }\n\n  const guestAccess = [ {label: 'Anonymous Access', value: false}];\n\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const onChangeData = (key, value, id) => {\n    const nextState = shares.map(a => a.sharename === id ? { ...a, [key]: value } : a);\n    setShares(nextState);\n   };\n\n  const guestChanged = () => (event) => {\n    setGuest(!guest);\n  }\n\n   const onRemoveData = (id) => {\n    const removedShare = shares.filter(a => a.sharename === id ? true:false);\n    const nextState = shares.filter(a => a.sharename === id ? false:true);\n    setShares(nextState);\n    fetch('/admin/remove/' + removedShare[0]['sharename'], {\n      method: \"post\"\n    }).then(response => response.text()).then(text=>{});\n   };\n\n   const onExplore = (e) => {\n     e.stopPropagation();\n   };\n\n   const onConnect = (index) => (e) => {\n\n    e.stopPropagation();    \n\n    //let share = {sharename: shares[index]['sharename'], sharetype: shares[index]['sharetype'], sharepath: shares[index]['sharepath'], guest: shares[index][\"guest\"], username: shares[index][\"username\"], password: shares[index][\"password\"]};\n\n     fetch(`/admin/connect/${shares[index][\"sharename\"]}`).then(response => response.text()).then(text => {\n       console.log(\"Mounted: \" + text);\n       if (text === \"0\" ) {\n          shares[index]['isconnected'] = true;\n          const newShares = [...shares];\n          console.log(newShares);\n          setShares(newShares);\n       }\n     });\n   };\n\n  return (\n<Container component=\"main\" maxWidth=\"xs\">\n<CssBaseline />\n\n    <Form\n       onSubmit={onSubmit}\n       render={({handleSubmit}) => (\n        <form onSubmit={handleSubmit}>\n              \n          <Grid container className={classes.grid}>\n          <Typography component=\"h1\" variant=\"h5\" className={classes.heading}>Add Network Shares</Typography>\n            <Grid item xs={12}  className={classes.textfield}>\n              <TextField type=\"text\" label=\"Share Name\" name=\"sharename\" helperText=\"eg. Music\" required={true} variant=\"outlined\"\n            margin=\"normal\"           \n            InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} \n            InputLabelProps={{\n              classes: {\n                label: classes.helpertext\n              }\n            }}\n            FormHelperTextProps={{\n              className: classes.helpertext\n            }}\n            />\n            </Grid>\n            <Grid item xs={12} >\n              <TextField className={classes.textfield}  label=\"Network Location\" name=\"sharepath\" helperText=\"eg. //192.168.1.10/Music\" required={true}             variant=\"outlined\"\n            margin=\"normal\" \n            InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} \n            InputLabelProps={{\n              classes: {\n                label: classes.helpertext\n              }\n            }}            \n            FormHelperTextProps={{\n              className: classes.helpertext\n            }}\n            color=\"primary\" />\n            </Grid>\n\n            <Grid item xs={12}  className={classes.share}>\n              <Checkboxes\n                 label=\"\"\n                 name=\"guest\"\n                 required={false}\n                 data={guestAccess}\n                 checked={guest}\n                 onChange={guestChanged()}\n              /> \n              { !guest &&\n              <div>\n              <TextField className={classes.textfield}  label=\"Username\" name=\"username\" helperText=\"\" required={false}             variant=\"outlined\"\n            margin=\"normal\" InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} color=\"primary\" />\n              <TextField className={classes.textfield}  label=\"Password\" name=\"password\" helperText=\"\" required={false}             variant=\"outlined\"\n            margin=\"normal\" InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} color=\"primary\" />                                    \n          </div>\n          }\n          \n            </Grid>\n          \n            <Grid item xs={12}>\n            <IconButton className={classes.nopadding} onClick={() => setAdvancedOptions(!advancedOptions)}><ExpandMoreIcon/></IconButton>\n            <span classes={classes.nopadding}>Advanced Options</span>\n              <Collapse in={advancedOptions}>\n              <Select  name=\"sharetype\" label=\"Share Type\" value=\"cifs\" required={true}>\n               <MenuItem value=\"cifs\">Windows Share</MenuItem>\n             </Select>\n              </Collapse>\n            </Grid>                     \n            <Grid item xs={12} className={classes.submit}>\n               <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n\t\t\t\t\t      Submit\n\t\t\t\t\t     </Button>\n            </Grid>\n          </Grid>          \n        </form>    \n       )}\n    >\n\n    </Form>\n\n\n    <Grid container className={classes.grid}>\n      <Typography className={classes.heading} component=\"h1\" variant=\"h5\">Network Shares</Typography>\n     { shares.map((item, index) => (\n       <Grid  key={item.sharename} item xs={12}>\n         <div className={classes.nodisplay}>{item.isconnected}</div>\n    <Accordion key={item.sharename}  expanded={expanded === item.sharename} onChange={handleChange(item.sharename)}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n          alignItems=\"center\"\n        >\n          <Box className={classes.circle}>                    { item.isconnected &&\n          <span className={classes.greencircle}></span>\n          }\n          { !item.isconnected &&\n          <span className={classes.redcircle}></span> \n          } \n          </Box>\n\n        <Box alignItems=\"center\"  width=\"100%\">\n          <Typography>\n          {item.sharename}\n          </Typography>\n        </Box>\n        <Box flexShrink={1}>\n          { item.isconnected &&\n          <a className={classes.explore} href={`/${item.sharename}`} target=\"_blank\"><Button variant=\"contained\" color=\"secondary\" onClick={onExplore}>Explore</Button></a>\n          }\n          { !item.isconnected &&\n          <a className={classes.explore}><Button color=\"primary\" onClick={onConnect(index)}>Connect</Button></a>\n          }       \n        </Box>\n        \n        </AccordionSummary>\n        <AccordionDetails className={classes.displayblock}>\n          <TableContainer component={Paper}>\n            <Table stickyHeader>\n              <TableHead>\n                <TableRow>\n                  <TableCell classes={{root: classes.tablebold}}>Property</TableCell>\n                  <TableCell classes={{root: classes.tablebold}}>Value</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n              <TableRow>\n                <TableCell classes={{root: classes.tablebold}}>Share Name</TableCell>\n                <TableCell>{item.sharename}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell classes={{root: classes.tablebold}}>Share Location</TableCell>\n                <TableCell>{item.sharepath}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell classes={{root: classes.tablebold}}>Share Type</TableCell>\n                <TableCell>{item.sharetype}</TableCell>\n              </TableRow>   \n              </TableBody>                         \n            </Table>\n\n          </TableContainer>\n          <Button classes={{root: classes.remove}} display=\"inline-block\" onClick={() => { onRemoveData(item.sharename)}}>Remove</Button>\n        </AccordionDetails>\n      </Accordion>\n      </Grid>\n     ))}\n    </Grid>\n     \n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}