{"version":3,"sources":["App.js","index.js"],"names":["App","useForm","register","handleSubmit","control","useState","networkbrowser","setNetworkBrowser","useFieldArray","name","fields","append","remove","useEffect","console","log","window","location","hostname","fetch","then","results","json","data","protocol","className","href","target","onSubmit","Name","NetworkPath","NetworkType","htmlFor","placeholder","ref","value","type","map","item","index","key","class","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOA+EeA,MA3Ef,WAAgB,IAAD,EAE+BC,cAApCC,EAFK,EAELA,SAAUC,EAFL,EAEKA,aAAcC,EAFnB,EAEmBA,QAFnB,EAGgCC,mBAAS,IAHzC,mBAGLC,EAHK,KAGWC,EAHX,OAIsBC,YAAc,CAC/CJ,UACAK,KAAM,SAFAC,EAJK,EAILA,OAAQC,EAJH,EAIGA,OAAQC,EAJX,EAIWA,OAkBxB,OATAC,qBAAU,WACRC,QAAQC,IAAIC,OAAOC,SAASC,UAC5BC,MAAM,8BACHC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GACJhB,EAAkBS,OAAOC,SAASO,SAAW,KAAOR,OAAOC,SAASC,SAAW,cAElF,IAGD,yBAAKO,UAAU,OACb,qDACuB,uBAAGC,KAAMpB,EAAgBqB,OAAO,UAAWrB,IAElE,iDACA,0BAAMsB,SAAUzB,GApBH,SAAAoB,GAEfZ,EAAO,CAACkB,KAAMN,EAAKM,KAAMC,YAAaP,EAAKO,YAAaC,YAAaR,EAAKQ,kBAmBtE,6BACE,2BAAOC,QAAQ,QAAf,QACA,2BAAOvB,KAAK,OAAOwB,YAAY,YAAYC,IAAKhC,KAGlD,6BACE,2BAAO8B,QAAQ,eAAf,gBACA,2BAAOvB,KAAK,cAAcwB,YAAY,4BAA4BC,IAAKhC,KAIzE,6BACE,2BAAO8B,QAAQ,eAAf,sBACA,4BAAQE,IAAKhC,EAAUO,KAAK,eAC1B,4BAAQ0B,MAAM,QAAd,mBAGJ,2BAAOC,KAAK,YAEd,6BACE,6BAEE1B,EAAO2B,KAAI,SAACC,EAAMC,GAIlB,OAFAzB,QAAQC,IAAIuB,GACZxB,QAAQC,IAAIwB,GAEZ,6BACE,0BAAMC,IAAKD,GACRD,EAAKT,KADR,IACeS,EAAKP,YADpB,IACkCO,EAAKR,aAEvC,8BACE,0BAAMW,MAAM,QACZ,4BAAQC,QAAS,WAAM5B,QAAQC,IAAIwB,KAAnC,WACA,4BAAQG,QAAS,WAAM5B,QAAQC,IAAIwB,KAAnC,cACA,4BAAQG,QAAS,kBAAK9B,EAAO2B,KAA7B,mBC9DdI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.3e5d75af.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useForm, useFieldArray } from 'react-hook-form';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const { register, handleSubmit, control } = useForm();\r\n  const [ networkbrowser, setNetworkBrowser] = useState('');\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"test\"\r\n  });\r\n  const onSubmit = data => {\r\n    //alert(JSON.stringify(data));\r\n    append({Name: data.Name, NetworkPath: data.NetworkPath, NetworkType: data.NetworkType});\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(window.location.hostname)\r\n    fetch('https://randomuser.me/api/')\r\n      .then(results => results.json())\r\n      .then(data => {\r\n        setNetworkBrowser(window.location.protocol + \"//\" + window.location.hostname + \":8002\" );\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        Network browser URL: <a href={networkbrowser} target=\"_blank\" >{networkbrowser}</a>\r\n      </div>\r\n      <h1>Add Network Share</h1>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div>\r\n          <label htmlFor=\"Name\">Name</label>\r\n          <input name=\"Name\" placeholder=\"eg. Music\" ref={register} />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"NetworkPath\">Network Path</label>\r\n          <input name=\"NetworkPath\" placeholder=\"eg. //192.168.20.99/Music\" ref={register} />\r\n        </div>\r\n\r\n\r\n        <div>\r\n          <label htmlFor=\"NetworkType\">Network Share Type</label>\r\n          <select ref={register} name=\"NetworkType\">\r\n            <option value=\"cifs\">Windows Share</option>\r\n          </select>      \r\n        </div>\r\n        <input type=\"submit\" />\r\n      </form>\r\n      <div>\r\n        <div>\r\n        {\r\n          fields.map((item, index) => {\r\n\r\n          console.log(item)\r\n          console.log(index)\r\n          return (\r\n          <div>\r\n            <span key={index}>\r\n              {item.Name} {item.NetworkType} {item.NetworkPath}\r\n            </span>\r\n            <span>\r\n              <span class=\"dot\"/>\r\n              <button onClick={()=> {console.log(index)}}>Connect</button>\r\n              <button onClick={()=> {console.log(index)}}>Disconnect</button>\r\n              <button onClick={()=> remove(index)}>Remove</button>\r\n            </span>\r\n          </div>)\r\n        })\r\n        }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}