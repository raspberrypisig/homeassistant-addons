{"version":3,"sources":["App.js","index.js"],"names":["App","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","textfield","fontFamily","letterSpacing","lineHeight","share","paddingTop","accordion","submit","marginTop","textAlign","grid","marginBottom","fontWeight","griditem","heading","margin","paddingBottom","nopadding","paddingLeft","displayblock","redcircle","height","width","borderRadius","backgroundColor","greencircle","nodisplay","circle","paddingRight","explore","textDecoration","tablebold","useState","shares","setShares","advancedOptions","setAdvancedOptions","guest","setGuest","useEffect","fetch","then","response","json","text","console","log","guestAccess","label","value","classes","React","expanded","setExpanded","onExplore","e","stopPropagation","onConnect","index","sharename","sharetype","sharepath","method","headers","body","JSON","stringify","newShares","map","item","Container","component","maxWidth","CssBaseline","onSubmit","values","filter","a","length","alert","undefined","networkshare","render","handleSubmit","Grid","container","className","Typography","variant","xs","type","name","helperText","required","InputProps","input","color","data","checked","onChange","event","IconButton","onClick","Collapse","in","MenuItem","Button","key","isconnected","Accordion","panel","isExpanded","AccordionSummary","expandIcon","aria-controls","id","alignItems","Box","flexShrink","href","target","AccordionDetails","TableContainer","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","removedShare","nextState","onRemoveData","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed9868a2.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Button, \n         Grid, \n         makeStyles, \n         Typography, \n         MenuItem, \n         Accordion, \n         AccordionDetails, \n         AccordionSummary, \n         Container, \n         CssBaseline, \n         Collapse, \n         IconButton,\n         Box,\n         Table,\n         TableBody,\n         TableCell,\n         TableContainer,\n         TableHead,\n         TableRow,\n         Paper\n        } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Form } from 'react-final-form';\nimport { TextField, Select, Checkboxes, CheckboxData } from 'mui-rff';\n//import './App.css';\n\n\n\nfunction App() {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around'\n    },\n    textfield:{\n      fontFamily: 'Arial, sans-serif',\n      letterSpacing: '0.5px',\n      lineHeight: '2rem'\n    },\n    share: {\n      paddingTop: '2rem'\n    },\n    accordion: {\n      /*\n      flexBasis: '33.33%',\n      flexShrink: 0\n      */\n    },\n    submit: {\n      marginTop: '32px',\n      textAlign: 'center'\n    },\n    grid: {\n      marginTop: '2rem',\n      marginBottom: '2rem',\n      fontWeight: 200\n    },\n    griditem: {\n\n    },\n    heading: {\n      margin: 'auto',\n      paddingBottom: '2rem'\n    },\n    nopadding: {\n      paddingLeft: 0\n    },\n    displayblock: {\n      display: 'block'\n    },\n    redcircle: {\n      height: '25px',\n      width: '25px',\n      borderRadius: '50%',\n      backgroundColor: 'red',\n      display: 'inherit'\n    },\n    greencircle: {\n      height: '25px',\n      width: '25px',\n      borderRadius: '50%',\n      backgroundColor: 'green',\n      display: 'inherit'\n    },\n    nodisplay: {\n      display: 'none'\n    },\n    circle: {\n      paddingRight: '1rem'\n    },\n    explore: {\n      textDecoration: 'none'\n    },\n    tablebold: {\n      fontWeight: 'bold'\n    }\n  }));\n\n  const [shares, setShares] = useState([])\n  const [advancedOptions, setAdvancedOptions] = useState(false)\n  const [guest, setGuest] = useState(false)\n\n  useEffect(() => {\n    fetch('/admin/shares').then(response => response.json()).then(text => {console.log(text); setShares(text);} );\n  }, []);\n\n  const validateForm = (sharename, sharepath) => {\n    const b = shares.filter(a => a.sharename === sharename || a.sharepath === sharepath ? false: true);\n    return b.length === shares.length;\n  };\n\n  function onSubmit(values) {\n    const isValid = validateForm(values[\"sharename\"], values[\"sharepath\"]);\n    if (!isValid) {\n      alert(\"Validation failed: duplicate entry for either share name or network location\")\n      return false;\n    }\n\n\n\n    if (values[\"sharetype\"] === undefined) {\n      values[\"sharetype\"] = \"cifs\"\n    }\n    values[\"key\"] = values[\"sharename\"];\n    values[\"isconnected\"] = false;  \n    values[\"guest\"] = guest;\n\n\n    \n\n    const networkshare = {sharename: values[\"sharename\"], sharetype: values[\"sharetype\"], sharepath: values[\"sharepath\"], guest: values[\"guest\"]};\n    console.log(networkshare);\n\n    fetch('/admin/addnetworkshare', {\n      method: \"post\", \n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(networkshare)\n    }).then(response => response.text()).then(text => {\n      if (text === \"0\") {\n        values[\"isconnected\"] = true;\n        setShares([...shares, values]);\n      }\n      else {\n        alert(\"Sorry. Can't connect to share. Double-check network details\");\n      }\n\n    });\n  }\n\n  const guestAccess = [ {label: 'Anonymous Access', value: false}];\n\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const onChangeData = (key, value, id) => {\n    const nextState = shares.map(a => a.sharename === id ? { ...a, [key]: value } : a);\n    setShares(nextState);\n   };\n\n  const guestChanged = () => (event) => {\n    setGuest(!guest);\n  }\n\n   const onRemoveData = (id) => {\n    const removedShare = shares.filter(a => a.sharename === id ? true:false);\n    const nextState = shares.filter(a => a.sharename === id ? false:true);\n    setShares(nextState);\n    fetch('/admin/remove/' + removedShare[0]['sharename'], {\n      method: \"post\"\n    }).then(response => response.text()).then(text=>{});\n   };\n\n   const onExplore = (e) => {\n     e.stopPropagation();\n   };\n\n   const onConnect = (index) => (e) => {\n\n    e.stopPropagation();    \n\n    let share = {sharename: shares[index]['sharename'], sharetype: shares[index]['sharetype'], sharepath: shares[index]['sharepath']};\n\n     fetch('/admin/connect', {\n      method: \"post\", \n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(share)       \n     }).then(response => response.text()).then(text => {\n       console.log(\"Mounted: \" + text);\n       if (text === \"0\" ) {\n          share['isconnected'] = true;\n          const newShares = shares.map(item => item['sharename'] === share['sharename']? share: item);\n          console.log(newShares);\n          setShares(newShares);\n       }\n     });\n   };\n\n  return (\n<Container component=\"main\" maxWidth=\"xs\">\n<CssBaseline />\n\n    <Form\n       onSubmit={onSubmit}\n       render={({handleSubmit}) => (\n        <form onSubmit={handleSubmit}>\n              \n          <Grid container className={classes.grid}>\n          <Typography component=\"h1\" variant=\"h5\" className={classes.heading}>Add Network Shares</Typography>\n            <Grid item xs={12}  className={classes.textfield}>\n              <TextField type=\"text\" label=\"Share Name\" name=\"sharename\" helperText=\"eg. Music\" required={true} variant=\"outlined\"\n            margin=\"normal\"           InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} />\n            </Grid>\n            <Grid item xs={12} >\n              <TextField className={classes.textfield}  label=\"Network Location\" name=\"sharepath\" helperText=\"eg. //192.168.1.10/Music\" required={true}             variant=\"outlined\"\n            margin=\"normal\" InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} color=\"primary\" />\n            </Grid>\n\n            <Grid item xs={12}  className={classes.share}>\n              <Checkboxes\n                 label=\"\"\n                 name=\"guest\"\n                 required={false}\n                 data={guestAccess}\n                 checked={guest}\n                 onChange={guestChanged()}\n              /> \n              { !guest &&\n              <div>\n              <TextField className={classes.textfield}  label=\"Username\" name=\"username\" helperText=\"\" required={false}             variant=\"outlined\"\n            margin=\"normal\" InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} color=\"primary\" />\n              <TextField className={classes.textfield}  label=\"Password\" name=\"password\" helperText=\"\" required={false}             variant=\"outlined\"\n            margin=\"normal\" InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} color=\"primary\" />                                    \n          </div>\n          }\n          \n            </Grid>\n          \n            <Grid item xs={12}>\n            <IconButton className={classes.nopadding} onClick={() => setAdvancedOptions(!advancedOptions)}><ExpandMoreIcon/></IconButton>\n            <span classes={classes.nopadding}>Advanced Options</span>\n              <Collapse in={advancedOptions}>\n              <Select  name=\"sharetype\" label=\"Share Type\" value=\"cifs\" required={true}>\n               <MenuItem value=\"cifs\">Windows Share</MenuItem>\n             </Select>\n              </Collapse>\n            </Grid>                     \n            <Grid item xs={12} className={classes.submit}>\n               <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n\t\t\t\t\t      Submit\n\t\t\t\t\t     </Button>\n            </Grid>\n          </Grid>          \n        </form>    \n       )}\n    >\n\n    </Form>\n\n\n    <Grid container className={classes.grid}>\n      <Typography className={classes.heading} component=\"h1\" variant=\"h5\">Network Shares</Typography>\n     { shares.map((item, index) => (\n       <Grid  key={item.sharename} item xs={12}>\n         <div className={classes.nodisplay}>{item.isconnected}</div>\n    <Accordion key={item.sharename}  expanded={expanded === item.sharename} onChange={handleChange(item.sharename)}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n          alignItems=\"center\"\n        >\n          <Box className={classes.circle}>                    { item.isconnected &&\n          <span className={classes.greencircle}></span>\n          }\n          { !item.isconnected &&\n          <span className={classes.redcircle}></span> \n          } \n          </Box>\n\n        <Box alignItems=\"center\"  width=\"100%\">\n          <Typography>\n          {item.sharename}\n          </Typography>\n        </Box>\n        <Box flexShrink={1}>\n          { item.isconnected &&\n          <a className={classes.explore} href={`/${item.sharename}`} target=\"_blank\"><Button variant=\"contained\" color=\"secondary\" onClick={onExplore}>Explore</Button></a>\n          }\n          { !item.isconnected &&\n          <a className={classes.explore}><Button color=\"primary\" onClick={onConnect(index)}>Connect</Button></a>\n          }       \n        </Box>\n        \n        </AccordionSummary>\n        <AccordionDetails className={classes.displayblock}>\n          <TableContainer component={Paper}>\n            <Table stickyHeader>\n              <TableHead>\n                <TableRow>\n                  <TableCell classes={{root: classes.tablebold}}>Property</TableCell>\n                  <TableCell classes={{root: classes.tablebold}}>Value</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n              <TableRow>\n                <TableCell classes={{root: classes.tablebold}}>Share Name</TableCell>\n                <TableCell>{item.sharename}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell classes={{root: classes.tablebold}}>Share Location</TableCell>\n                <TableCell>{item.sharepath}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell classes={{root: classes.tablebold}}>Share Type</TableCell>\n                <TableCell>{item.sharetype}</TableCell>\n              </TableRow>   \n              </TableBody>                         \n            </Table>\n\n          </TableContainer>\n          <Button display=\"inline-block\" onClick={() => { onRemoveData(item.sharename)}}>Remove</Button>\n        </AccordionDetails>\n      </Accordion>\n      </Grid>\n     ))}\n    </Grid>\n     \n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}