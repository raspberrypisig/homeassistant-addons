{"version":3,"sources":["App.js","index.js"],"names":["App","themeDark","createMuiTheme","palette","type","themeLight","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","textfield","fontFamily","letterSpacing","lineHeight","fontSize","share","paddingTop","accordion","submit","marginTop","textAlign","grid","marginBottom","fontWeight","griditem","heading","margin","paddingBottom","nopadding","paddingLeft","displayblock","redcircle","height","width","borderRadius","backgroundColor","greencircle","nodisplay","circle","paddingRight","explore","textDecoration","tablebold","helpertext","remove","color","selection","useState","darkmode","SetDarkMode","shares","setShares","guest","setGuest","sharetypeselect","SetShareTypeSelect","smbverselect","SetSMBVerSelect","useEffect","fetch","then","response","json","text","console","log","guestAccess","label","value","classes","React","expanded","setExpanded","sharetypeChanged","event","target","smbverChanged","onExplore","e","stopPropagation","onConnect","index","newShares","scrollToBottom","setTimeout","window","scroll","top","document","body","clientHeight","left","behavior","ThemeProvider","Paper","style","boxShadow","Container","component","maxWidth","CssBaseline","onSubmit","values","form","sharename","sharepath","filter","a","length","alert","undefined","networkshare","sharetype","username","password","smbver","method","headers","JSON","stringify","restart","render","handleSubmit","Grid","container","className","spacing","direction","Typography","variant","item","xs","name","helperText","required","InputProps","input","InputLabelProps","FormHelperTextProps","data","checked","onChange","MenuItem","Button","map","key","isconnected","Accordion","panel","isExpanded","AccordionSummary","expandIcon","aria-controls","id","alignItems","Box","flexShrink","href","onClick","AccordionDetails","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","removedShare","nextState","onRemoveData","Link","onclick","preventDefault","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c2691aee.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Button, \n         Grid, \n         makeStyles, \n         Typography, \n         MenuItem, \n         Accordion, \n         AccordionDetails, \n         AccordionSummary, \n         Container, \n         CssBaseline, \n         Collapse, \n         IconButton,\n         Link,\n         Box,\n         Table,\n         TableBody,\n         TableCell,\n         TableContainer,\n         TableHead,\n         TableRow,\n         Paper\n        } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Form } from 'react-final-form';\nimport { TextField, Select, Checkboxes } from 'mui-rff';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n\n\nfunction App() {\n\n  const themeDark = createMuiTheme({\n    palette: {\n      type: 'dark'\n    }\n  });\n\n  const themeLight = createMuiTheme({\n    palette: {\n      type: 'light'\n    }\n  });\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around'\n    },\n    textfield:{\n      fontFamily: 'Arial, sans-serif',\n      letterSpacing: '0.5px',\n      lineHeight: '2rem',\n      fontSize: '24px'\n    },\n    share: {\n      paddingTop: '2rem'\n    },\n    accordion: {\n      /*\n      flexBasis: '33.33%',\n      flexShrink: 0\n      */\n    },\n    submit: {\n      marginTop: '32px',\n      textAlign: 'center'\n    },\n    grid: {\n      paddingTop: '2rem',\n      marginBottom: '2rem',\n      fontWeight: 200\n    },\n    griditem: {\n\n    },\n    heading: {\n      margin: 'auto',\n      paddingBottom: '2rem'\n    },\n    nopadding: {\n      paddingLeft: 0\n    },\n    displayblock: {\n      display: 'block'\n    },\n    redcircle: {\n      height: '25px',\n      width: '25px',\n      borderRadius: '50%',\n      backgroundColor: 'red',\n      display: 'inherit'\n    },\n    greencircle: {\n      height: '25px',\n      width: '25px',\n      borderRadius: '50%',\n      backgroundColor: 'green',\n      display: 'inherit'\n    },\n    nodisplay: {\n      display: 'none'\n    },\n    circle: {\n      paddingRight: '1rem'\n    },\n    explore: {\n      textDecoration: 'none'\n    },\n    tablebold: {\n      fontWeight: 'bold'\n    },\n    helpertext: {\n      fontSize: '20px'\n    },\n    remove: {\n      color: 'red'\n    },\n    selection: {\n      marginBottom: \"1rem\"\n    }\n  }));\n\n  const [darkmode, SetDarkMode] = useState(false);\n\n  const [shares, setShares] = useState([])\n  //const [advancedOptions, setAdvancedOptions] = useState(true)\n  const [guest, setGuest] = useState(false)\n  const [sharetypeselect, SetShareTypeSelect] = useState(\"cifs\")\n  const [smbverselect, SetSMBVerSelect] = useState(\"default\")\n\n\n  useEffect(() => {\n    fetch('/admin/shares').then(response => response.json()).then(text => {console.log(text); setShares(text);} );\n    fetch('/api/darkmode').then(response => response.json()).then(text => {\n      if (text) {\n        SetDarkMode(true);\n      }\n    });\n  }, []);\n\n  const validateForm = (sharename, sharepath) => {\n    const b = shares.filter(a => a.sharename === sharename || a.sharepath === sharepath ? false: true);\n    return b.length === shares.length;\n  };\n\n  function onSubmit(values, form) {\n    const isValid = validateForm(values[\"sharename\"], values[\"sharepath\"]);\n    if (!isValid) {\n      alert(\"Validation failed: duplicate entry for either share name or network location\")\n      return false;\n    }\n\n   \n\n    if (values[\"sharetype\"] === undefined) {\n      values[\"sharetype\"] = \"cifs\"\n    }\n    values[\"key\"] = values[\"sharename\"];\n    values[\"isconnected\"] = false;  \n    values[\"guest\"] = guest;\n    values[\"smbver\"] = smbverselect;\n\n    const networkshare = {sharename: values[\"sharename\"], sharetype: values[\"sharetype\"], sharepath: values[\"sharepath\"], guest: values[\"guest\"], username: values[\"username\"], password: values[\"password\"], smbver: values[\"smbver\"]};\n    console.log(networkshare);\n\n\n\n    fetch('/admin/addnetworkshare', {\n      method: \"post\", \n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(networkshare)\n    }).then(response => response.text()).then(text => {\n      if (text === \"0\") {\n        values[\"isconnected\"] = true;\n        setShares([...shares, values]);\n        setTimeout(form.restart);\n        scrollToBottom();\n      }\n      else {\n        alert(\"Sorry. Can't connect to share. Double-check network details\");\n      }\n\n    });\n  }\n\n  const guestAccess = [ {label: 'Anonymous Access', value: false}];\n\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const onChangeData = (key, value, id) => {\n    const nextState = shares.map(a => a.sharename === id ? { ...a, [key]: value } : a);\n    setShares(nextState);\n   };\n\n  const guestChanged = () => (event) => {\n    setGuest(!guest);\n  }\n\n  const sharetypeChanged =  (event) => {    \n    SetShareTypeSelect(event.target.value);\n  }\n\n  const smbverChanged = (event) => {\n    SetSMBVerSelect(event.target.value);\n  }\n\n   const onRemoveData = (id) => {\n    const removedShare = shares.filter(a => a.sharename === id ? true:false);\n    const nextState = shares.filter(a => a.sharename === id ? false:true);\n    setShares(nextState);\n    fetch('/admin/remove/' + removedShare[0]['sharename'], {\n      method: \"post\"\n    }).then(response => response.text()).then(text=>{});\n   };\n\n   const onExplore = (e) => {\n     e.stopPropagation();\n   };\n\n   const onConnect = (index) => (e) => {\n\n    e.stopPropagation();    \n\n    //let share = {sharename: shares[index]['sharename'], sharetype: shares[index]['sharetype'], sharepath: shares[index]['sharepath'], guest: shares[index][\"guest\"], username: shares[index][\"username\"], password: shares[index][\"password\"]};\n\n     fetch(`/admin/connect/${shares[index][\"sharename\"]}`).then(response => response.text()).then(text => {\n       console.log(\"Mounted: \" + text);\n       if (text === \"0\" ) {\n          shares[index]['isconnected'] = true;\n          const newShares = [...shares];\n          console.log(newShares);\n          setShares(newShares);\n       }\n     });\n   };\n\n  const scrollToTop = (event) => {\n    event.preventDefault();\n    window.scroll({top: 0, left: 0, behavior: \"smooth\"});\n    return false;\n  }\n\n  const scrollToBottom = () => {\n    setTimeout(window.scroll({top: window.document.body.clientHeight, left: 0, behavior: \"smooth\"}));\n  }\n\n  return (\n<ThemeProvider theme={darkmode ? themeDark: themeLight} >    \n<Paper style={{boxShadow: \"none\"}}>\n<Container component=\"main\" maxWidth=\"xs\">\n<CssBaseline />\n\n    <Form\n       onSubmit={onSubmit}\n       render={({handleSubmit}) => (\n        <form onSubmit={handleSubmit}>\n              \n          <Grid container className={classes.grid} spacing={3} direction=\"column\">\n          <Typography component=\"h1\" variant=\"h5\" className={classes.heading}>Add Network Shares</Typography>\n            <Grid item xs={12}  className={classes.textfield}>\n              <TextField type=\"text\" label=\"Share Name\" name=\"sharename\" helperText=\"eg. Music\" required={true} variant=\"outlined\"\n            margin=\"normal\"           \n            InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} \n            InputLabelProps={{\n              classes: {\n                label: classes.helpertext\n              }\n            }}\n            FormHelperTextProps={{\n              className: classes.helpertext\n            }}\n            />\n            </Grid>\n            <Grid item xs={12} >\n              <TextField className={classes.textfield}  label=\"Network Location\" name=\"sharepath\" helperText=\"eg. //192.168.1.10/Music\" required={true}             variant=\"outlined\"\n            margin=\"normal\" \n            InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} \n            InputLabelProps={{\n              classes: {\n                label: classes.helpertext\n              }\n            }}            \n            FormHelperTextProps={{\n              className: classes.helpertext\n            }}\n            color=\"primary\" />\n            </Grid>\n\n            <Grid item xs={12}  className={classes.share}>\n              <Checkboxes\n                 label=\"\"\n                 name=\"guest\"\n                 required={false}\n                 data={guestAccess}\n                 checked={guest}\n                 onChange={guestChanged()}\n              /> \n              { !guest &&\n              <div>\n              <TextField className={classes.textfield}  label=\"Username\" name=\"username\" helperText=\"\" required={false}             variant=\"outlined\"\n            margin=\"normal\" InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} color=\"primary\" />\n              <TextField className={classes.textfield}  label=\"Password\" name=\"password\" helperText=\"\" required={false}             variant=\"outlined\"\n            margin=\"normal\" InputProps={{\n              classes: {\n                input: classes.textfield,\n              },\n            }} color=\"primary\" />                                    \n          </div>\n          }\n          \n            </Grid>\n          \n \n            <Grid item xs={12} style={{ paddingBottom: \"1rem\" }}>\n              <Select name=\"sharetype\"  className={classes.selection} value={sharetypeselect} onChange={sharetypeChanged} label=\"Share Type\" >\n               <MenuItem value=\"cifs\">Windows Share</MenuItem>\n             </Select>\n             </Grid>\n             \n             <Grid item xs={12}>\n             <Select name=\"smbver\" className={classes.selection}  label=\"SMB Version\" value={smbverselect} onChange={smbverChanged}  data={[\n                { label: 'Default', value: 'default' },\n                { label: 'Legacy', value: '1.0'}\n             ]}/>            \n            \n             </Grid>\n\n                  \n            <Grid item xs={12} className={classes.submit}>\n               <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n\t\t\t\t\t      Submit\n\t\t\t\t\t     </Button>\n            </Grid>\n          </Grid>          \n        </form>    \n       )}\n    >\n\n    </Form>\n\n\n    <Grid container className={classes.grid}>\n      <Typography className={classes.heading} component=\"h1\" variant=\"h5\">Network Shares</Typography>\n     { shares.map((item, index) => (\n       <Grid  key={item.sharename} item xs={12}>\n         <div className={classes.nodisplay}>{item.isconnected}</div>\n    <Accordion key={item.sharename}  expanded={expanded === item.sharename} onChange={handleChange(item.sharename)}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n          alignItems=\"center\"\n        >\n          <Box className={classes.circle}>                    { item.isconnected &&\n          <span className={classes.greencircle}></span>\n          }\n          { !item.isconnected &&\n          <span className={classes.redcircle}></span> \n          } \n          </Box>\n\n        <Box alignItems=\"center\"  width=\"100%\">\n          <Typography>\n          {item.sharename}\n          </Typography>\n        </Box>\n        <Box flexShrink={1}>\n          { item.isconnected &&\n          <a className={classes.explore} href={`/${item.sharename}`} target=\"_blank\"><Button variant=\"contained\" color=\"secondary\" onClick={onExplore}>Explore</Button></a>\n          }\n          { !item.isconnected &&\n          <a className={classes.explore}><Button color=\"primary\" onClick={onConnect(index)}>Connect</Button></a>\n          }       \n        </Box>\n        \n        </AccordionSummary>\n        <AccordionDetails className={classes.displayblock}>\n          <TableContainer component={Paper}>\n            <Table stickyHeader>\n              <TableHead>\n                <TableRow>\n                  <TableCell classes={{root: classes.tablebold}}>Property</TableCell>\n                  <TableCell classes={{root: classes.tablebold}}>Value</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n              <TableRow>\n                <TableCell classes={{root: classes.tablebold}}>Share Name</TableCell>\n                <TableCell>{item.sharename}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell classes={{root: classes.tablebold}}>Share Location</TableCell>\n                <TableCell>{item.sharepath}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell classes={{root: classes.tablebold}}>Share Type</TableCell>\n                <TableCell>{item.sharetype}</TableCell>\n              </TableRow>   \n              </TableBody>                         \n            </Table>\n\n          </TableContainer>\n          <Button classes={{root: classes.remove}} display=\"inline-block\" onClick={() => { onRemoveData(item.sharename)}}>Remove</Button>\n        </AccordionDetails>\n      </Accordion>\n      </Grid>\n     ))}\n    </Grid>\n    <Grid container className={classes.grid} spacing={3} direction=\"column\">\n       <Grid item xs={12}>\n          <Typography>\n            <Link href=\"#\" onclick={scrollToTop}>Add Another Network Share</Link>\n          </Typography>\n       </Grid>\n       <Grid item xs={12}>\n       <Typography>\n            <Link href=\"/cast\" >Cast Music</Link>\n          </Typography>\n       </Grid>\n    </Grid>\n    </Container>\n    </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}