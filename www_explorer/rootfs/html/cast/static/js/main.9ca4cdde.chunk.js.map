{"version":3,"sources":["Cast.js","Playlists.js","App.js","serviceWorker.js","index.js"],"names":["currentPath","playerOptions","Cast","useState","files","setFiles","id","uuidv4","name","path","folderChain","setFolderChain","player","setPlayer","useEffect","fetch","then","request","json","map","x","value","label","length","console","log","response","push","isDir","fileActions","ChonkyActions","ChangeSelection","OpenParentFolder","OpenFiles","ToggleSearch","SortFilesByName","SortFilesBySize","SortFilesByDate","ToggleShowFoldersFirst","className","defaultValue","onChange","options","href","onFileAction","action","data","undefined","decodeURIComponent","newFolderChain","url","method","headers","body","JSON","stringify","text","targetid","target","index","findIndex","slice","disableDefaultFileActions","Playlists","createplaylist","SetCreatePlaylist","existingplaylists","SetExistingPlaylists","currentplaylist","SetCurrentPlaylist","selection","SetSelection","TextField","variant","event","onClick","App","element","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"qKAQIA,E,+GAEAC,EAAgB,GAkNLC,ICpNXF,EDoNWE,EAhNf,WAAiB,IAAD,EAEUC,mBAAS,IAFnB,mBAETC,EAFS,KAEFC,EAFE,OAGsBF,mBAAS,CAAC,CAACG,GAAIC,cAAUC,KAAM,iBAAkBC,KAAM,OAH7E,mBAGTC,EAHS,KAGIC,EAHJ,OAIYR,mBAAS,MAJrB,mBAITS,EAJS,KAIDC,EAJC,KAOhBC,qBAAU,WACRC,MAAM,eAAeC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UAAQF,MAAK,SAAAE,IACxDjB,EAAgBiB,EAAKC,KAAI,SAAAC,GAAK,MAAO,CAACC,MAAOD,EAAGE,MAAOF,OACrCG,OAAS,IACzBC,QAAQC,IAAIP,EAAK,IACjBL,EAAU,CAACQ,MAAOH,EAAK,GAAII,MAAOJ,EAAK,SAK3ClB,EAAc,GACde,MAAM,oBAAoBC,MAAK,SAAAU,GAAQ,OAAIA,EAASR,UAASF,MAAK,SAAAE,GAChE,IAAId,EAAQ,GACZc,EAAKC,KAAI,SAAAC,GACP,IAAMZ,EAAOY,EAAC,MACdhB,EAAMuB,KAAK,CAACrB,GAAIC,cAAUC,KAAMA,EAAMoB,OAAO,OAE/CvB,EAASD,QAIV,IAGH,IA8IMyB,EAAc,CAClBC,gBAAcC,gBACdD,gBAAcE,iBACd,CACE1B,GAAIwB,gBAAcG,UAAU3B,IAE9BwB,gBAAcI,aACdJ,gBAAcK,gBACdL,gBAAcM,gBACdN,gBAAcO,gBACdP,gBAAcQ,wBAGhB,OACI,yBAAMC,UAAU,OACZ,mDACY,MAAV3B,GACF,kBAAC,IAAD,CACA4B,aAAc5B,EACd6B,SAAU5B,EACV6B,QAASzC,IAGT,+DAAoC,uBAAG0C,KAAK,cAAR,aAApC,KAEA,kBAAC,cAAD,CAAavC,MAAOA,EAAOM,YAAaA,EAAakC,aAvKpC,SAACC,EAAQC,GAChC,GAAkB,qBAAdD,EAAOvC,GAA2B,CACpC,QAAuByC,IAAnBD,EAAK1C,MAAM,GAAmB,OAClC,IAAII,EAFgC,EAGnBsC,EAAK1C,MAAM,GAC5B,GADEI,EAHkC,EAGlCA,KAHkC,EAG5BoB,MACG,CACTpB,EAAOwC,mBAAmBA,mBAAmBxC,IAC7CR,EAAcA,EAAc,IAAMQ,EAClCgB,QAAQC,IAAR,8BAAmCjB,IACnCgB,QAAQC,IAAR,wBAA6BzB,IAE7B,IACIiD,EADA7C,EAAQ,GAGd6C,EAAc,sBAAOvC,GAAP,CAAoB,CAACJ,GAAIC,cAAUC,KAAMA,EAAMC,KAAMT,KACnEwB,QAAQC,IAAR,0BAA+BwB,IAG9BlC,MAAO,mBAAqBf,GAAagB,MAAK,SAAAU,GAAQ,OAAIA,EAASR,UAASF,MAAK,SAAAE,GAEhFA,EAAKC,KAAI,SAAAC,GACP,IAAM8B,EAAM9B,EAAC,KACPZ,EAAOY,EAAC,MACdhB,EAAMuB,KAAK,CAACrB,GAAIC,cAAUC,KAAMA,EAAMoB,OAAO,EAAMsB,IAAKA,OAI1DnC,MAAM,aAAef,GAAagB,MAAK,SAAAU,GAAQ,OAAIA,EAASR,UAAQF,MAAK,SAAAE,GACvEA,EAAKC,KAAI,SAAAC,GACP,IAAM8B,EAAM9B,EAAC,KACPZ,EAAOY,EAAC,MACdhB,EAAMuB,KAAK,CAACrB,GAAIC,cAAUC,KAAMA,EAAM0C,IAAKA,OAI7CvC,EAAesC,GACf5C,EAASD,cAUXoB,QAAQC,IAAI,iBACZD,QAAQC,IAAR,UAAeqB,EAAK1C,MAAM,GAAG8C,MAC7B1B,QAAQC,IAAR,iCAAsCb,EAAM,QAC5CG,MAAM,WAAY,CAChBoC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACrB,iBAAoB3C,EAAM,MACzB,IAAOkC,EAAK1C,MAAM,GAAG8C,QAEpBlC,MAAK,SAAAU,GAAQ,OAAEA,EAAS8B,UAAQxC,MAAK,SAAAwC,GAAI,OAAE,aAM9C,GAAkB,eAAdX,EAAOvC,GAAqB,CACpC,IAAMmD,EAAWX,EAAKY,OAAOpD,GAC7BkB,QAAQC,IAAIgC,GACZ,IAAME,EAAQjD,EAAYkD,WAAU,SAAAxC,GAAC,OAAIA,EAAEd,KAAOmD,KAClD,IAAe,IAAXE,EACF,OAEFnC,QAAQC,IAAIkC,GAEQ,OADpB3D,EAAcU,EAAYiD,GAAOlD,QAE/BT,EAAc,IAEhBwB,QAAQC,IAAIzB,GACZ,IAAMiD,EAAiBvC,EAAYmD,MAAM,EAAGF,EAAQ,GACpDnC,QAAQC,IAAIwB,GAEb,IAAI7C,EAAQ,GAEVW,MAAO,mBAAqBf,GAAagB,MAAK,SAAAU,GAAQ,OAAIA,EAASR,UAASF,MAAK,SAAAE,GAS/E,GAPAA,EAAKC,KAAI,SAAAC,GACP,IAAM8B,EAAM9B,EAAC,KACPZ,EAAOY,EAAC,MACdhB,EAAMuB,KAAK,CAACrB,GAAIC,cAAUC,KAAMA,EAAMoB,OAAO,EAAMsB,IAAKA,OAItC,KAAhBlD,EAGF,OAFAW,EAAesC,QACf5C,EAASD,GAIXW,MAAM,aAAef,GAAagB,MAAK,SAAAU,GAAQ,OAAIA,EAASR,UAAQF,MAAK,SAAAE,GACvEA,EAAKC,KAAI,SAAAC,GACP,IAAM8B,EAAM9B,EAAC,KACPZ,EAAOY,EAAC,MACdhB,EAAMuB,KAAK,CAACrB,GAAIC,cAAUC,KAAMA,EAAM0C,IAAKA,OAI7CvC,EAAesC,GACf5C,EAASD,SAQfoB,QAAQC,IAAIoB,GACZrB,QAAQC,IAAIqB,IAoD+EgB,2BAA2B,EAAMjC,YAAaA,GAC/H,kBAAC,cAAD,MACA,kBAAC,aAAD,MACA,kBAAC,WAAD,S,SCsBGkC,MAjOf,WAAsB,IAAD,EAEyB5D,mBAAS,IAFlC,mBAEZ6D,EAFY,KAEIC,EAFJ,OAG+B9D,mBAAS,IAHxC,mBAGZ+D,EAHY,KAGOC,EAHP,OAI2BhE,mBAAS,MAJpC,mBAIZiE,EAJY,KAIKC,EAJL,OAKelE,mBAAS,MALxB,mBAKZmE,EALY,KAKDC,EALC,KAOnBzD,qBAAU,WACRC,MAAM,8BAA8BC,MAAK,SAAAU,GAAQ,OAAIA,EAAS8B,UAAQxC,MAAK,SAAAwC,GAAI,OAAIhC,QAAQC,IAAI+B,MAC/FzC,MAAM,wBAAwBC,MAAK,SAAAU,GAAQ,OAAIA,EAAS8B,UAAQxC,MAAK,SAAAwC,GAAI,OAAIhC,QAAQC,IAAI+B,QACxF,IAEH,IAZmB,EAqCOrD,mBAAS,IArChB,mBAqCZC,EArCY,KAqCLC,EArCK,OAsCmBF,mBAAS,CAAC,CAACG,GAAIC,cAAUC,KAAM,iBAAkBC,KAAM,OAtC1E,mBAsCZC,EAtCY,KAsCCC,EAtCD,KA0CnBG,qBAAU,WACRd,EAAc,GACde,MAAM,oBAAoBC,MAAK,SAAAU,GAAQ,OAAIA,EAASR,UAASF,MAAK,SAAAE,GAChE,IAAId,EAAQ,GACZc,EAAKC,KAAI,SAAAC,GACP,IAAMZ,EAAOY,EAAC,MACdhB,EAAMuB,KAAK,CAACrB,GAAIC,cAAUC,KAAMA,EAAMoB,OAAO,OAE/CvB,EAASD,QAIV,IAEH,IAsHMyB,EAAc,CAClBC,gBAAcC,gBACdD,gBAAcE,iBACd,CACE1B,GAAIwB,gBAAcG,UAAU3B,IAE9BwB,gBAAcI,aACdJ,gBAAcK,gBACdL,gBAAcM,gBACdN,gBAAcO,gBACdP,gBAAcQ,wBAGhB,OACE,yBAAMC,UAAU,OACd,8CACA,2BACE,+CACA,kBAACiC,EAAA,EAAD,CAAWhE,KAAK,iBAAiBc,MAAM,kBAAkBmD,QAAQ,WAAWhC,SAAU,SAACiC,GAAD,OAAWT,EAAkBS,EAAMhB,OAAOrC,UAFlI,IAE6I,2BAAG,4BAAQsD,QApLrI,WACpBnD,QAAQC,IAAR,mBACAD,QAAQC,IAAIuC,GACZjD,MAAM,qBAAD,OAAsBiD,IAAkBhD,MAAK,SAAAU,GAAQ,OAAIA,EAAS8B,UAAQxC,MAAK,SAAAwC,GACrE,SAATA,IACHW,EAAqB,GAAD,mBAAKD,GAAL,CAAwB,CAAC7C,MAAO2C,EAAgB1C,MAAO0C,MAC3EK,EAAmB,CAAChD,MAAO2C,EAAgB1C,MAAO0C,UA8K4F,qBAEhJ,2BACE,2DAEA,kBAAC,IAAD,CAAQxD,KAAK,oBAAoBa,MAAO+C,EAAiB3B,SAAU4B,EAAoB3B,QAASwB,KAGlG,2BACE,sDACA,2DACA,sFACA,iGACA,6FACF,gDAAyC,MAAnBE,EAA0BA,EAAgB/C,MAAQ,IACtE,sDACA,2BAAG,uBAAGsB,KAAK,iBAAR,kBACH,2BAAG,4BAAQgC,QAzLc,WAC7BnD,QAAQC,IAAI6C,GAEZvD,MAAM,uBAAwB,CAC5BoC,OAAQ,OACRE,KAAMC,KAAKC,UAAUe,GACrBlB,QAAS,CACP,eAAgB,sBAEjBpC,MAAK,SAAAU,GAAQ,OAAIA,EAASR,UAAQF,MAAK,SAAAE,GAAI,OAAIM,QAAQC,IAAIP,QAgLvD,8BAEH,kBAAC,cAAD,CAAad,MAAOA,EAAOM,YAAaA,EAAakC,aA3JlC,SAACC,EAAQC,GAGhC,GAAkB,eAAdD,EAAOvC,GAAqB,CAI9B,GAHAkB,QAAQC,IAAI,cACZ8C,EAAa,MACb/C,QAAQC,IAAIqB,QACWC,IAAnBD,EAAK1C,MAAM,GAAmB,OAClC,IAAII,EAL0B,EAMbsC,EAAK1C,MAAM,GAC5B,GADEI,EAN4B,EAM5BA,KAN4B,EAMtBoB,MACG,CACTpB,EAAOwC,mBAAmBA,mBAAmBxC,IAC7CR,EAAcA,EAAc,IAAMQ,EAClCgB,QAAQC,IAAR,8BAAmCjB,IACnCgB,QAAQC,IAAR,wBAA6BzB,IAE7B,IACIiD,EADA7C,EAAQ,GAGd6C,EAAc,sBAAOvC,GAAP,CAAoB,CAACJ,GAAIC,cAAUC,KAAMA,EAAMC,KAAMT,KACnEwB,QAAQC,IAAR,0BAA+BwB,IAG9BlC,MAAO,mBAAqBf,GAAagB,MAAK,SAAAU,GAAQ,OAAIA,EAASR,UAASF,MAAK,SAAAE,GAEhFA,EAAKC,KAAI,SAAAC,GACP,IAAM8B,EAAM9B,EAAC,KACPZ,EAAOY,EAAC,MACdhB,EAAMuB,KAAK,CAACrB,GAAIC,cAAUC,KAAMA,EAAMoB,OAAO,EAAMsB,IAAKA,OAI1DnC,MAAM,aAAef,GAAagB,MAAK,SAAAU,GAAQ,OAAIA,EAASR,UAAQF,MAAK,SAAAE,GACvEA,EAAKC,KAAI,SAAAC,GACP,IAAM8B,EAAM9B,EAAC,KACPZ,EAAOY,EAAC,MACdhB,EAAMuB,KAAK,CAACrB,GAAIC,cAAUC,KAAMA,EAAM0C,IAAKA,OAI7CvC,EAAesC,GACf5C,EAASD,aAQR,CACH,IAAMqD,EAAWX,EAAKY,OAAOpD,GAC7BkB,QAAQC,IAAIgC,GACZjC,QAAQC,IAAIqB,GACZtB,QAAQC,IAAIf,GAJT,MAKcoC,EAAK1C,MAAM,GAA1BI,EALC,EAKDA,KALC,EAKKoB,MACR,IAAM+B,EAAQjD,EAAYkD,WAAU,SAAAxC,GAAC,OAAIA,EAAEd,KAAOmD,KAClD,IAAe,IAAXE,EACF,OAEFnC,QAAQC,IAAIkC,GAEQ,OADpB3D,EAAcU,EAAYiD,GAAOlD,QAE/BT,EAAc,IAEhBwB,QAAQC,IAAIzB,GACZ,IAAMiD,EAAiBvC,EAAYmD,MAAM,EAAGF,EAAQ,GACpDnC,QAAQC,IAAIwB,GAEb,IAAI7C,EAAQ,GAEVW,MAAO,mBAAqBf,GAAagB,MAAK,SAAAU,GAAQ,OAAIA,EAASR,UAASF,MAAK,SAAAE,GAS/E,GAPAA,EAAKC,KAAI,SAAAC,GACP,IAAM8B,EAAM9B,EAAC,KACPZ,EAAOY,EAAC,MACdhB,EAAMuB,KAAK,CAACrB,GAAIC,cAAUC,KAAMA,EAAMoB,OAAO,EAAMsB,IAAKA,OAItC,KAAhBlD,EAGF,OAFAW,EAAesC,QACf5C,EAASD,GAIXW,MAAM,aAAef,GAAagB,MAAK,SAAAU,GAAQ,OAAIA,EAASR,UAAQF,MAAK,SAAAE,GACvEA,EAAKC,KAAI,SAAAC,GACP,IAAM8B,EAAM9B,EAAC,KACPZ,EAAOY,EAAC,MACdhB,EAAMuB,KAAK,CAACrB,GAAIC,cAAUC,KAAMA,EAAM0C,IAAKA,OAI7CvC,EAAesC,GACf5C,EAASD,cAYK,qBAAdyC,EAAOvC,IACVwC,EAAK1C,MAAMmB,OAAS,IACtBC,QAAQC,IAAI,mBACZ8C,EAAazB,EAAK1C,QAItBoB,QAAQC,IAAIoB,GACZrB,QAAQC,IAAIqB,IAyC6EgB,2BAA2B,EAAMjC,YAAaA,GAC/H,kBAAC,cAAD,MACA,kBAAC,aAAD,MACA,kBAAC,WAAD,QAIN,2BACE,wBAAIvB,GAAG,gBAAP,uBCrNOsE,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOnE,KAAK,QAAQoE,QAAS,kBAAC,EAAD,QAC7B,kBAAC,IAAD,CAAOpE,KAAK,aAAaoE,QAAS,kBAAC,EAAD,WCEtBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1E,MAAK,SAAA2E,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtE,QAAQsE,MAAMA,EAAMC,a","file":"static/js/main.9ca4cdde.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport 'chonky/style/main.css';\nimport { FileBrowser, FileList, FileSearch, FileToolbar, ChonkyActions } from 'chonky';\nimport { v4 as uuidv4 } from 'uuid';\nimport Select from 'react-select';\n\n\nlet currentPath;\n\nlet playerOptions = [];\n\nfunction Cast() {\n\nconst [files, setFiles] = useState([]);\nconst [folderChain, setFolderChain] = useState([{id: uuidv4(), name: 'Network Shares', path: '/'}]);\nconst [player, setPlayer] = useState(null);\n\n\nuseEffect(()=> {\n  fetch('/ha/players').then(request => request.json()).then(json => {\n    playerOptions = json.map(x=> {return {value: x, label: x}});\n    if (playerOptions.length > 0) {\n      console.log(json[0]);\n      setPlayer({value: json[0], label: json[0]});\n    }\n    \n  });\n\n  currentPath = \"\";\n  fetch('/api/directories').then(response => response.json() ).then(json => {\n    let files = [];\n    json.map(x => {\n      const name = x['short'];\n      files.push({id: uuidv4(), name: name, isDir: true});\n    });\n    setFiles(files);\n  });\n\n\n}, []);\n\n\nconst handleFileAction = (action, data) => {\n  if (action.id === \"change_selection\") {\n    if (data.files[0]  === undefined) return;\n    let name,isDir;\n    ({name, isDir} = data.files[0]);\n    if (isDir) {\n      name = decodeURIComponent(decodeURIComponent(name));\n      currentPath = currentPath + \"/\" + name;\n      console.log(`Directory selected: ${name}`);\n      console.log(`Current Path: ${currentPath}`);\n     \n      let files = [];\n      let newFolderChain;\n\n    newFolderChain = [...folderChain, {id: uuidv4(), name: name, path: currentPath}];\n    console.log(`Newfolderchain: ${newFolderChain}`);\n    //newFolderChain = [{id: uuidv4(), name: 'Network Shares'}, {id: uuidv4(), name: name}];\n     \n     fetch( '/api/directories' + currentPath).then(response => response.json() ).then(json => {\n\n      json.map(x => {\n        const url = x['full'];\n        const name = x['short'];\n        files.push({id: uuidv4(), name: name, isDir: true, url: url});\n      });\n\n\n      fetch('/api/files' + currentPath).then(response => response.json()).then(json => {\n        json.map(x => {\n          const url = x['full'];\n          const name = x['short'];\n          files.push({id: uuidv4(), name: name, url: url});\n        });         \n\n\n        setFolderChain(newFolderChain);\n        setFiles(files);      \n      });\n\n    });\n\n\n    }\n\n    else {\n\n      console.log(\"File selected\");\n      console.log(`${data.files[0].url}`);\n      console.log(`Selected Media player: ${player['value']}`)\n      fetch('/ha/cast', {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n        \"player_entity_id\": player['value'],\n         \"url\": data.files[0].url\n        })\n       }).then(response=>response.text()).then(text=>null);\n    \n\n    }\n  }\n\n  else if (action.id === \"open_files\") {\n   const targetid = data.target.id;\n   console.log(targetid);\n   const index = folderChain.findIndex(x => x.id === targetid);\n   if (index === -1) {\n     return;\n   }\n   console.log(index);\n   currentPath = folderChain[index].path;\n   if (currentPath === \"/\") {\n     currentPath = \"\";\n   }\n   console.log(currentPath);\n   const newFolderChain = folderChain.slice(0, index + 1);\n   console.log(newFolderChain);\n      \n  let files = [];\n\n    fetch( '/api/directories' + currentPath).then(response => response.json() ).then(json => {\n\n      json.map(x => {\n        const url = x['full'];\n        const name = x['short'];\n        files.push({id: uuidv4(), name: name, isDir: true, url: url});\n      });\n\n\n      if (currentPath === \"\") {\n        setFolderChain(newFolderChain);\n        setFiles(files);  \n        return;        \n      }\n\n      fetch('/api/files' + currentPath).then(response => response.json()).then(json => {\n        json.map(x => {\n          const url = x['full'];\n          const name = x['short'];\n          files.push({id: uuidv4(), name: name, url: url});\n        });         \n        \n\n        setFolderChain(newFolderChain);\n        setFiles(files);      \n      });\n     \n\n    });\n\n  }\n\n  console.log(action);\n  console.log(data);\n\n};\n\n\n/*\nconst fileActions = [\n  {\n      id: ChonkyActions.OpenFiles.id,\n  },\n  {\n      id: ChonkyActions.ChangeSelection.id \n  },\n  {\n      id: ChonkyActions.OpenParentFolder.id,\n      requiresSelection: false\n  },\n  {\n    id: ChonkyActions.ToggleShowFoldersFirst.id\n  },\n  {\n    id: ChonkyActions.ToggleSearch.id,\n    \n  }\n];\n*/\n\nconst fileActions = [\n  ChonkyActions.ChangeSelection,\n  ChonkyActions.OpenParentFolder,\n  {\n    id: ChonkyActions.OpenFiles.id\n  },\n  ChonkyActions.ToggleSearch,\n  ChonkyActions.SortFilesByName,\n  ChonkyActions.SortFilesBySize,\n  ChonkyActions.SortFilesByDate,\n  ChonkyActions.ToggleShowFoldersFirst\n];\n\nreturn (\n    <div  className=\"App\">\n        <h2>Choose Media Player</h2>\n        { player != null &&\n        <Select\n        defaultValue={player}\n        onChange={setPlayer}\n        options={playerOptions}\n        />\n        }\n        <h2>Choose Music To Play (or select <a href=\"/playlists\">Playlists</a>)</h2>\n\n        <FileBrowser files={files} folderChain={folderChain} onFileAction={handleFileAction} disableDefaultFileActions={true} fileActions={fileActions}>\n            <FileToolbar />\n            <FileSearch />\n            <FileList />\n        </FileBrowser>       \n        \n    </div>\n  );\n}\n\nexport default Cast;\n\n\n\n\n","import React, {useState, useEffect} from 'react';\nimport { TextField } from '@material-ui/core';\nimport './App.css';\nimport 'chonky/style/main.css';\nimport { FileBrowser, FileList, FileSearch, FileToolbar, ChonkyActions } from 'chonky';\nimport { v4 as uuidv4 } from 'uuid';\nimport Select from 'react-select';\n\nlet currentPath;\n\nfunction Playlists() {\n\n  const [createplaylist, SetCreatePlaylist] = useState('');\n  const [existingplaylists, SetExistingPlaylists] = useState([]);\n  const [currentplaylist, SetCurrentPlaylist] = useState(null);\n  const [selection, SetSelection] = useState(null);\n\n  useEffect(() => {\n    fetch('/playlists/currentplaylist').then(response => response.text()).then(text => console.log(text));\n    fetch('/playlists/playlists').then(response => response.text()).then(text => console.log(text));\n  }, []);\n\n  const createPlaylist = ()  => {\n     console.log(`Create playlist`);\n     console.log(createplaylist);\n     fetch(`/playlists/create/${createplaylist}`).then(response => response.text()).then(text => {\n       if (text === \"True\") {\n        SetExistingPlaylists([...existingplaylists, {value: createplaylist, label: createplaylist}]);\n        SetCurrentPlaylist({value: createplaylist, label: createplaylist});\n       }\n      });\n\n  };\n\n  const addSelectionToPlaylist = () => {\n    console.log(selection);\n    \n    fetch('/playlists/addfolder', {\n      method: 'post',\n      body: JSON.stringify(selection),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(json => console.log(json));\n    \n  }\n\n  const [files, setFiles] = useState([]);\n  const [folderChain, setFolderChain] = useState([{id: uuidv4(), name: 'Network Shares', path: '/'}]);\n\n  \n  \n  useEffect(()=> {  \n    currentPath = \"\";\n    fetch('/api/directories').then(response => response.json() ).then(json => {\n      let files = [];\n      json.map(x => {\n        const name = x['short'];\n        files.push({id: uuidv4(), name: name, isDir: true});\n      });\n      setFiles(files);\n    });\n  \n  \n  }, []);\n\n  const handleFileAction = (action, data) => {\n\n    \n    if (action.id === \"open_files\") {\n      console.log(\"OPEN FILES\");\n      SetSelection(null);\n      console.log(data);\n      if (data.files[0]  === undefined) return;\n      let name,isDir;\n      ({name, isDir} = data.files[0]);\n      if (isDir) {\n        name = decodeURIComponent(decodeURIComponent(name));\n        currentPath = currentPath + \"/\" + name;\n        console.log(`Directory selected: ${name}`);\n        console.log(`Current Path: ${currentPath}`);\n       \n        let files = [];\n        let newFolderChain;\n  \n      newFolderChain = [...folderChain, {id: uuidv4(), name: name, path: currentPath}];\n      console.log(`Newfolderchain: ${newFolderChain}`);\n      //newFolderChain = [{id: uuidv4(), name: 'Network Shares'}, {id: uuidv4(), name: name}];\n       \n       fetch( '/api/directories' + currentPath).then(response => response.json() ).then(json => {\n  \n        json.map(x => {\n          const url = x['full'];\n          const name = x['short'];\n          files.push({id: uuidv4(), name: name, isDir: true, url: url});\n        });\n  \n  \n        fetch('/api/files' + currentPath).then(response => response.json()).then(json => {\n          json.map(x => {\n            const url = x['full'];\n            const name = x['short'];\n            files.push({id: uuidv4(), name: name, url: url});\n          });         \n  \n  \n          setFolderChain(newFolderChain);\n          setFiles(files);      \n        });\n  \n      });\n  \n  \n      }\n  \n      else {\n        const targetid = data.target.id;\n        console.log(targetid);\n        console.log(data);\n        console.log(folderChain);\n        ({name, isDir} = data.files[0]);\n        const index = folderChain.findIndex(x => x.id === targetid);\n        if (index === -1) {\n          return;\n        }\n        console.log(index);\n        currentPath = folderChain[index].path;\n        if (currentPath === \"/\") {\n          currentPath = \"\";\n        }\n        console.log(currentPath);\n        const newFolderChain = folderChain.slice(0, index + 1);\n        console.log(newFolderChain);\n           \n       let files = [];\n     \n         fetch( '/api/directories' + currentPath).then(response => response.json() ).then(json => {\n     \n           json.map(x => {\n             const url = x['full'];\n             const name = x['short'];\n             files.push({id: uuidv4(), name: name, isDir: true, url: url});\n           });\n     \n     \n           if (currentPath === \"\") {\n             setFolderChain(newFolderChain);\n             setFiles(files);  \n             return;        \n           }\n     \n           fetch('/api/files' + currentPath).then(response => response.json()).then(json => {\n             json.map(x => {\n               const url = x['full'];\n               const name = x['short'];\n               files.push({id: uuidv4(), name: name, url: url});\n             });         \n             \n     \n             setFolderChain(newFolderChain);\n             setFiles(files);      \n           });\n          \n     \n         });\n  \n      }\n\n\n    }\n  \n    //else if (action.id === \"open_files\") {\n    else if (action.id === \"change_selection\") {\n      if (data.files.length > 0) {\n        console.log(\"CHANGE SELECTED\");\n        SetSelection(data.files);\n      }\n    }\n\n    console.log(action);\n    console.log(data);\n  \n  };\n\n  const fileActions = [\n    ChonkyActions.ChangeSelection,\n    ChonkyActions.OpenParentFolder,\n    {\n      id: ChonkyActions.OpenFiles.id\n    },\n    ChonkyActions.ToggleSearch,\n    ChonkyActions.SortFilesByName,\n    ChonkyActions.SortFilesBySize,\n    ChonkyActions.SortFilesByDate,\n    ChonkyActions.ToggleShowFoldersFirst\n  ];\n\n  return (\n    <div  className=\"App\">\n      <h2>Playlists Page</h2>\n      <p>\n        <h2>Create Playlist</h2>\n        <TextField name=\"createplaylist\" label=\"Create Playlist\" variant=\"outlined\" onChange={(event) => SetCreatePlaylist(event.target.value)} /> <p><button onClick={createPlaylist}>CREATE PLAYLIST</button></p>\n      </p>\n      <p>\n        <h2>OR Select Existing Playlist</h2>\n        \n        <Select name=\"existingplaylists\" value={currentplaylist} onChange={SetCurrentPlaylist} options={existingplaylists}/>                \n        \n      </p>\n      <p>\n        <h2>Add Folder to Playlist</h2>\n        <p>1. Choose folders from below</p>\n        <p>2. Single click to select, double-click to open folder </p>\n        <p>3. You can select multiple folders at once using shift or ctrl key</p>\n        <p>4. Add selection to playlist. You can do this multiple times. </p>\n      <p>CURRENT PLAYLIST: {currentplaylist != null ? currentplaylist.value : \"\" }</p>\n        <p>PLAYLIST ITEMS COUNT: 0</p>\n        <p><a href=\"#viewplaylist\">View Playlist</a></p>\n        <p><button onClick={addSelectionToPlaylist}>ADD SELECTION TO PLAYLIST</button></p>\n\n        <FileBrowser files={files} folderChain={folderChain} onFileAction={handleFileAction} disableDefaultFileActions={true} fileActions={fileActions}>\n            <FileToolbar />\n            <FileSearch />\n            <FileList />\n        </FileBrowser>     \n\n      </p>\n      <p>\n        <h2 id=\"viewplaylist\">Current Playlist</h2>\n      </p>\n    </div>\n  );\n}\n\nexport default Playlists;","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Cast from './Cast';\nimport Playlists from './Playlists';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/cast\" element={<Cast/>} ></Route>\n        <Route path=\"/playlists\" element={<Playlists/>} ></Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}